{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const userSelectedDate = selectedDates[0];\n\n    if (userSelectedDate < new Date()) {\n      iziToast.error({\n        position: 'topRight',\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      document.querySelector('[data-start]').disabled = true;\n    } else {\n      document.querySelector('[data-start]').disabled = false;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\ndocument.querySelector('[data-start]').addEventListener('click', () => {\n  const endDate = new Date(\n    document.querySelector('#datetime-picker').value\n  ).getTime();\n\n  document.querySelector('#datetime-picker').disabled = true;\n  document.querySelector('[data-start]').disabled = true;\n\n  const timerInterval = setInterval(() => {\n    const currentTime = new Date().getTime();\n    const timeDifference = endDate - currentTime;\n\n    if (timeDifference <= 0) {\n      clearInterval(timerInterval);\n      updateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      iziToast.success({\n        position: 'topRight',\n      });\n    } else {\n      const timeObject = convertMs(timeDifference);\n      updateTimerDisplay(timeObject);\n    }\n  }, 1000);\n});\n\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) {\n  const updateElement = (selector, value) => {\n    document.querySelector(selector).textContent = addLeadingZero(value);\n  };\n\n  updateElement('[data-days]', days);\n  updateElement('[data-hours]', hours);\n  updateElement('[data-minutes]', minutes);\n  updateElement('[data-seconds]', seconds);\n}\n\nconst addLeadingZero = value => (value < 10 ? `0${value}` : value);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}"],"names":["options","selectedDates","iziToast","flatpickr","endDate","timerInterval","currentTime","timeDifference","updateTimerDisplay","timeObject","convertMs","days","hours","minutes","seconds","updateElement","selector","value","addLeadingZero","ms"],"mappings":"0FAKA,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACIA,EAAc,CAAC,EAEjB,IAAI,MACzBC,EAAS,MAAM,CACb,SAAU,WACV,MAAO,QACP,QAAS,oCACjB,CAAO,EACD,SAAS,cAAc,cAAc,EAAE,SAAW,IAElD,SAAS,cAAc,cAAc,EAAE,SAAW,EAErD,CACH,EAEAC,EAAU,mBAAoBH,CAAO,EAErC,SAAS,cAAc,cAAc,EAAE,iBAAiB,QAAS,IAAM,CACrE,MAAMI,EAAU,IAAI,KAClB,SAAS,cAAc,kBAAkB,EAAE,KAC5C,EAAC,QAAO,EAET,SAAS,cAAc,kBAAkB,EAAE,SAAW,GACtD,SAAS,cAAc,cAAc,EAAE,SAAW,GAElD,MAAMC,EAAgB,YAAY,IAAM,CACtC,MAAMC,EAAc,IAAI,KAAM,EAAC,QAAO,EAChCC,EAAiBH,EAAUE,EAEjC,GAAIC,GAAkB,EACpB,cAAcF,CAAa,EAC3BG,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAChEN,EAAS,QAAQ,CACf,SAAU,UAClB,CAAO,MACI,CACL,MAAMO,EAAaC,EAAUH,CAAc,EAC3CC,EAAmBC,CAAU,CAC9B,CACF,EAAE,GAAI,CACT,CAAC,EAED,SAASD,EAAmB,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC7D,MAAMC,EAAgB,CAACC,EAAUC,IAAU,CACzC,SAAS,cAAcD,CAAQ,EAAE,YAAcE,EAAeD,CAAK,CACvE,EAEEF,EAAc,cAAeJ,CAAI,EACjCI,EAAc,eAAgBH,CAAK,EACnCG,EAAc,iBAAkBF,CAAO,EACvCE,EAAc,iBAAkBD,CAAO,CACzC,CAEA,MAAMI,EAAiBD,GAAUA,EAAQ,GAAK,IAAIA,CAAK,GAAKA,EAE5D,SAASP,EAAUS,EAAI,CAMrB,MAAMR,EAAO,KAAK,MAAMQ,EAAK,KAAG,EAC1BP,EAAQ,KAAK,MAAOO,EAAK,MAAO,IAAI,EACpCN,EAAU,KAAK,MAAQM,EAAK,MAAO,KAAQ,GAAM,EACjDL,EAAU,KAAK,MAASK,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAR,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}